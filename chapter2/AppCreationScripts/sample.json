{
    "Sample": {
      "Title": "An Angular Single-Page Application (SPA) using Security Groups to implement authorization",
      "Level": 300,
      "Client": "TodoListSPA",
      "Service": "TodoListAPI",
      "RepositoryUrl": "ms-identity-javascript-angular-spa-dotnetcore-webapi-roles-groups",
      "Endpoint": "AAD v2.0"
    },
    "AADApps": [
      {
        "Id": "service",
        "Name": "TodoListAPI",
        "Kind": "WebApi",
        "Audience": "AzureADMyOrg",
        "GroupMembershipClaims": "SecurityGroup",
        "PasswordCredentials": "Auto",
        "RequiredResourcesAccess": [
          {
            "Resource": "Microsoft Graph",
            "DelegatedPermissions": [ "User.Read", "GroupMember.Read.All" ]
          }
        ],
        "ManualSteps": [
          { "Comment": "On Azure Portal, create a security group named GroupAdmin, assign some users to it, and configure your ID and Access token to emit GroupID in your app registration." },
          { "Comment": "On Azure Portal, create a security group named GroupMember, assign some users to it, and configure your ID and Access token to emit GroupID in your app registration." }
        ]      
      },
      {
        "Id": "client",
        "Name": "TodoListSPA",
        "Kind": "SinglePageApplication",
        "Audience": "AzureADMyOrg",
        "HomePage": "http://localhost:4200/",
        "ReplyUrls": "http://localhost:4200/",
        "GroupMembershipClaims": "SecurityGroup",
        "RequiredResourcesAccess": [
          {
            "Resource": "service",
            "DelegatedPermissions": [ "access_as_user" ]
          },
          {
            "Resource": "Microsoft Graph",
            "DelegatedPermissions": [ "User.Read", "GroupMember.Read.All" ]
          }
        ],
        "ManualSteps": [
          { "Comment": "On Azure Portal, create a security group named GroupAdmin, assign some users to it, and configure your ID and Access token to emit GroupID in your app registration." },
          { "Comment": "On Azure Portal, create a security group named GroupMember, assign some users to it, and configure your ID and Access token to emit GroupID in your app registration." }
        ]  
      }
    ],
    "CodeConfiguration": [
      {
        "App": "service",
        "SettingKind": "Replace",
        "SettingFile": "\\..\\TodoListAPI\\appsettings.json",
        "Mappings": [
          {
            "key": "Enter the domain of your Azure AD tenant, e.g. 'contoso.onmicrosoft.com'",
            "value": "$tenantName"
          },
          {
            "key": "Enter the Id of your Azure AD tenant copied from the Azure portal",
            "value": "$tenantId"
          },
          {
            "key": "Enter the application ID (clientId) of the 'TodoListAPI' application copied from the Azure portal",
            "value": "service.AppId"
          },
          {
            "key": "Enter the Client Secret",
            "value": "service.AppKey"
          }
        ]
      },
  
      {
        "App": "client",
        "SettingKind": "Replace",
        "SettingFile": "\\..\\TodoListSPA\\src\\app\\app-config.json",
        "Mappings": [
          {
            "key": "Enter the Client Id (aka 'Application ID')",
            "value": "client.AppId"
          },
          {
            "key": "https://login.microsoftonline.com/Enter_the_Tenant_Id_Here",
            "value": "\"https://login.microsoftonline.com/\"+$tenantId"
          },
          {
            "key": "Enter the API scopes as declared in the app registration 'Expose an Api' blade in the form of 'api://{clientId}/access_as_user'",
            "value": "service.Scope"
          }
        ]
      }
    ]
  }